<launch>

  <!-- copy calibration files in rgbd_lwr/calibration/asus into ./ros/camera_info/ -->
  <!-- Launch openni2 with custom driver parameters -->
  <include file="$(find openni2_launch)/launch/openni2.launch">  
    <arg name="depth_registration"              value="true" />
    <arg name="color_depth_synchronization"     value="true" />
    <arg name="auto_exposure"                   value="true" />
    <arg name="auto_white_balance"              value="true" />
    <arg name="rgb_processing"                  value="true" /> 
    <arg name="debayer_processing"              value="false" /> 
    <arg name="ir_processing"                   value="false" /> 
    <arg name="depth_processing"                value="true" /> 
    <arg name="depth_registered_processing"     value="true" /> 
    <arg name="disparity_processing"            value="false" /> 
    <arg name="disparity_registered_processing" value="false" /> 
    <arg name="hw_registered_processing"        value="true" /> 
    <arg name="sw_registered_processing"        value="false"/>
  </include>
  
  <!-- Launch scene acquirer -->
  <include file="$(find scene_acquirer_node)/launch/scene_acquirer_node.launch" />
  
  <!-- Launch turn table interface -->
  <include file="$(find turn_table_interface_node)/launch/turnTable_interface.launch" /> 

  <!-- Launch rgbd lwr node -->
  <include file="$(find rgbd_lwr)/launch/rgbd_lwr.launch" />

  <!-- Launch tf_broadcaster -->
  <include file="$(find tf_table_camera_broadcaster)/launch/tf_table_camera_broadcaster.launch" />

	<!-- the poses scanner node  -->
	<node name="poses_scanner_node" pkg="poses_scanner_node" type="poses_scanner_node" output="screen" />

</launch>
